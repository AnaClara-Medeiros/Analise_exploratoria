# -*- coding: utf-8 -*-
"""Primeira_analise_pandas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/186qD_L9JqLpud3BOCFbxq0QtwcqH-BqC
"""

import pandas as pd
import numpy as np

df = pd.read_csv('/content/StudentsPerformance (2).csv')

df.head() #mostra as primeiras linhas do dataset

df.shape #quantidade de linhas e colunas

df.columns #traz o nome das colunas do dataframe

df.duplicated().sum() #verifica a quantidade de linhas duplicadas

df.info #informações do dataframe e colunas

df.isna().sum() #para cada coluna tenho nulos?

df.describe() #sumário estatístico dos dados

df['parental level of education'].unique() #consigo ver quais são as classes únicas, quais as categorias

"""Tratando as colunas de provas"""

provas = ['math score', 'reading score', 'writing score']

#ordenar pelo score das provas

df = df.sort_values(by = provas, ascending = False)\
.reset_index(drop = True) #ordenar o indice pq se não ele mantem o original 
#conforme as linhas mudarem de lugar e deleta o indice anterior

df

df['mean'] = df[provas].mean(axis = 1) #cria uma coluna de média com a notas das provas

df.head()

"""Consultas"""

#alunos do sexo masculino, que não fizeram o teste e tiveram nota maior ou iguala  70
#nome de colunas com espaço coloca com crase

df.query('(gender == "male") & (`test preparation course` == "none") & (`math score` >= 70)')

#outra maneira de fazer a mesma consulta chamando parte dos dataset

df[(df.gender == 'male') & (df['test preparation course'] == 'none') & (df['math score'] >= 70)]

#agrupar por gênero a média e mediana das provas

df.groupby(by = 'gender')[provas].agg([np.mean, np.median]).T